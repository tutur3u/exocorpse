@import "tailwindcss";

/* CSS Custom Properties for wiki theming */
:root {
  --wiki-primary: #3b82f6;
  --wiki-secondary: #2563eb;

  /* Story theming defaults */
  --story-primary: #3b82f6;
  --story-secondary: #2563eb;
  --story-bg: transparent;
  --story-text: inherit;
  --story-bg-image: none;
}

/* Story theme color utilities using CSS custom properties */
.story-title {
  background: linear-gradient(
    to right,
    var(--story-primary),
    var(--story-secondary)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.story-tab-active {
  color: var(--story-primary);
}

.story-tab-underline {
  background: linear-gradient(
    to right,
    var(--story-primary),
    var(--story-secondary)
  );
}

.story-badge-primary {
  background-color: color-mix(in srgb, var(--story-primary) 20%, transparent);
  color: var(--story-primary);
}

.story-badge-secondary {
  background-color: color-mix(in srgb, var(--story-secondary) 20%, transparent);
  color: var(--story-secondary);
}

.story-gradient-horizontal {
  background: linear-gradient(
    to right,
    var(--story-primary),
    var(--story-secondary)
  );
}

.story-gradient-vertical {
  background: linear-gradient(
    to bottom,
    var(--story-primary),
    var(--story-secondary)
  );
}

.story-gradient-reverse {
  background: linear-gradient(
    to right,
    var(--story-secondary),
    var(--story-primary)
  );
}

.story-bg {
  background-color: var(--story-bg);
}

.story-text {
  color: var(--story-text);
}

.story-container {
  background: var(--story-bg);
  color: var(--story-text);
}

/* Theme color utilities using CSS custom properties */
.wiki-title {
  background: linear-gradient(
    to right,
    var(--wiki-primary),
    var(--wiki-secondary)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.wiki-tab-active {
  color: var(--wiki-primary);
}

.wiki-tab-underline {
  background: linear-gradient(
    to right,
    var(--wiki-primary),
    var(--wiki-secondary)
  );
}

.wiki-badge-primary {
  background-color: color-mix(in srgb, var(--wiki-primary) 20%, transparent);
  color: var(--wiki-primary);
}

.wiki-badge-secondary {
  background-color: color-mix(in srgb, var(--wiki-secondary) 20%, transparent);
  color: var(--wiki-secondary);
}

.wiki-gradient-horizontal {
  background: linear-gradient(
    to right,
    var(--wiki-primary),
    var(--wiki-secondary)
  );
}

.wiki-gradient-vertical {
  background: linear-gradient(
    to bottom,
    var(--wiki-primary),
    var(--wiki-secondary)
  );
}

.wiki-gradient-reverse {
  background: linear-gradient(
    to right,
    var(--wiki-secondary),
    var(--wiki-primary)
  );
}

/* Custom animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.3s ease-in-out;
}

.animate-slideUp {
  animation: slideUp 0.4s ease-out;
}

.animate-slideDown {
  animation: slideDown 0.4s ease-out;
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-scaleIn {
  animation: scaleIn 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

.animate-fadeOut {
  animation: fadeOut 0.15s ease-in forwards;
}

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-baskervville), Arial, Helvetica, sans-serif;
  overflow: hidden;
}

/* Window styles */
.window-container {
  transition: opacity 0.2s ease-in-out;
}

.window-drag-handle {
  cursor: move;
  user-select: none;
}

/* Smooth transitions for window state changes */
.window-container .flex {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Custom scrollbar for window content */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

@media (prefers-color-scheme: dark) {
  ::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
  }
}

/* Prevent text selection during drag */
.window-drag-handle * {
  user-select: none;
}

/* Mobile-specific styles */
@media (max-width: 640px) {
  /* Ensure touch-friendly tap targets */
  button,
  a {
    min-height: 44px;
    min-width: 44px;
  }

  /* Prevent pull-to-refresh on mobile */
  body {
    overscroll-behavior-y: contain;
  }

  /* Smooth scrolling for mobile */
  * {
    -webkit-overflow-scrolling: touch;
  }
}

/* Cursor definitions */
:root {
  --cursor-normal: url("/cursor/Normal.cur"), auto;
  --cursor-link: url("/cursor/Link.cur"), pointer;
  --cursor-move: url("/cursor/Move.cur"), move;
  --cursor-text: url("/cursor/Text.cur"), text;
  --cursor-busy: url("/cursor/Busy.ani"), auto;
  --cursor-working: url("/cursor/Working.ani"), auto;
  --cursor-help: url("/cursor/Help.cur"), help;
  --cursor-unavailable: url("/cursor/Unavailable.cur"), not-allowed;
  --cursor-vertical: url("/cursor/Vertical.cur"), ns-resize;
  --cursor-horizontal: url("/cursor/EW-Resize.cur"), ew-resize;
  --cursor-diagonal1: url("/cursor/NWSE-Resize.cur"), nwse-resize;
  --cursor-diagonal2: url("/cursor/NESW-Resize.cur"), nesw-resize;
  --cursor-handwriting: url("/cursor/Handwriting.cur"), auto;
  --cursor-person: url("/cursor/Person.cur"), auto;
  --cursor-pin: url("/cursor/Pin.cur"), auto;
  --cursor-precision: url("/cursor/Precision.cur"), auto;
  --cursor-alternate: url("/cursor/Alternate.cur"), auto;
}

/* Global cursor */
html,
body,
* {
  cursor: var(--cursor-normal) !important;
}

/* Cursor utilities */
.cursor-default {
  cursor: var(--cursor-normal) !important;
}

.cursor-link {
  cursor: var(--cursor-link) !important;
}

.cursor-pointer {
  cursor: var(--cursor-link) !important;
}

.cursor-move {
  cursor: var(--cursor-move) !important;
}

.cursor-text {
  cursor: var(--cursor-text) !important;
}

.cursor-busy {
  cursor: var(--cursor-busy) !important;
}

.cursor-working {
  cursor: var(--cursor-working) !important;
}

.cursor-help {
  cursor: var(--cursor-help) !important;
}

.cursor-not-allowed {
  cursor: var(--cursor-unavailable) !important;
}

.cursor-ns-resize {
  cursor: var(--cursor-vertical) !important;
}

.cursor-ew-resize {
  cursor: var(--cursor-horizontal) !important;
}

.cursor-nwse-resize {
  cursor: var(--cursor-diagonal1) !important;
}

.cursor-nesw-resize {
  cursor: var(--cursor-diagonal2) !important;
}

.cursor-hand {
  cursor: var(--cursor-person) !important;
}

.cursor-pin {
  cursor: var(--cursor-pin) !important;
}

.cursor-precision {
  cursor: var(--cursor-precision) !important;
}

.cursor-handwriting {
  cursor: var(--cursor-handwriting) !important;
}

.cursor-alternate {
  cursor: var(--cursor-alternate) !important;
}

/* Window-specific cursor adjustments */
.window-drag-handle,
.window-drag-handle * {
  cursor: var(--cursor-move) !important;
}

/* Button cursor */
button,
button *,
[role="button"],
[role="button"] *,
a,
a * {
  cursor: var(--cursor-link) !important;
}

button:disabled,
button:disabled *,
[role="button"][aria-disabled="true"],
[role="button"][aria-disabled="true"] *,
a:has([aria-disabled="true"]),
a:has([aria-disabled="true"]) * {
  cursor: var(--cursor-unavailable) !important;
}

/* Input field cursor */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="number"],
textarea,
select {
  cursor: var(--cursor-text) !important;
}

/* Resize handles cursor */
.resize-handle,
.resize-handle-ns {
  cursor: var(--cursor-vertical) !important;
}

.resize-handle-ew {
  cursor: var(--cursor-horizontal) !important;
}

.resize-handle-nwse {
  cursor: var(--cursor-diagonal1) !important;
}

.resize-handle-nesw {
  cursor: var(--cursor-diagonal2) !important;
}
