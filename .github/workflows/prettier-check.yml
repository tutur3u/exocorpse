name: Prettier Format Check

on:
  push:
    branches-ignore:
      - "dependabot/**"
      - "staging"
      - "production"
  workflow_dispatch:

jobs:
  format:
    name: Prettier Check
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          # Required for creating commits and PRs
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Check Prettier formatting
        id: check-format
        run: bun format:check || echo "format_failed=true" >> $GITHUB_OUTPUT

      - name: Check for existing formatting PR
        if: steps.check-format.outputs.format_failed != 'true'
        id: check-existing-pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = `fix/prettier-formatting-${{ github.ref_name }}`;
            const { data: pullRequests } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branchName}`,
              state: 'open'
            });

            if (pullRequests.length > 0) {
              const pr = pullRequests[0];
              core.setOutput('pr_number', pr.number);
              core.setOutput('pr_exists', 'true');
              console.log(`Found existing PR #${pr.number}`);
            } else {
              core.setOutput('pr_exists', 'false');
              console.log('No existing formatting PR found');
            }

      - name: Close and delete formatting PR
        if: steps.check-existing-pr.outputs.pr_exists == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = parseInt('${{ steps.check-existing-pr.outputs.pr_number }}');
            const branchName = 'fix/prettier-formatting-${{ github.ref_name }}';

            // Close the PR
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              state: 'closed'
            });
            console.log(`✓ Closed PR #${prNumber}`);

            // Add a comment explaining the closure
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: '✅ This PR is no longer needed. All code is now properly formatted. Closing and cleaning up.'
            });

            // Delete the branch
            try {
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${branchName}`
              });
              console.log(`✓ Deleted branch ${branchName}`);
            } catch (error) {
              console.log(`Branch ${branchName} may already be deleted or doesn't exist`);
            }

      - name: Apply Prettier fixes
        if: steps.check-format.outputs.format_failed == 'true'
        run: bun format:fix

      - name: Check for changes
        if: steps.check-format.outputs.format_failed == 'true'
        id: git-check
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create Pull Request
        if: steps.git-check.outputs.changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "style: apply prettier formatting"
          title: "style: apply prettier formatting for ${{ github.ref_name }}"
          body: |
            This PR fixes code formatting issues using Prettier.

            Auto-generated by the Prettier Format Check workflow.
          branch: fix/prettier-formatting-${{ github.ref_name }}
          base: ${{ github.ref_name }}
          delete-branch: true

      - name: Fail Workflow After Creating PR
        if: steps.create-pr.outputs.pull-request-number != ''
        run: |
          echo "Prettier formatting issues were found and a PR has been created."
          echo "PR: ${{ steps.create-pr.outputs.pull-request-url }}"
          exit 1

      - name: Comment on PR
        if: github.event_name == 'pull_request' && steps.check-format.outputs.format_failed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Prettier format check failed. Please run `bun format` locally and commit the changes.'
            })
